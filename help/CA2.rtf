{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green77\blue204;\red0\green0\blue0;\red204\green0\blue102;
\red96\green96\blue96;\red0\green77\blue204;\red96\green96\blue96;}
\deftab560
\pard\pardeftab560

\f0\i\b\fs140 \cf2 CA2\cf3 \
\pard\pardeftab560

\i0\fs24 \cf3 *ar(smprt, smpwd, rule, seed, trig, mul, add) 
\b0 \cf4 // yet experimental. loud!\cf3 \
ugen one-dimensional binary state cellular automaton (\cf5 2 \cf3 neighbours configuration). \
interprets the binary lattice as floating-point sample values.\
no-interpolation.\
\

\b smprt	
\b0 iteration frequency\

\b smpwd
\b0  	lattice size\

\b rule	
\b0 	\cf5 "00000000-FFFFFFFF"\cf3 \

\b seed
\b0 	seeding (random if \cf5 0\cf3 , otherwise translate integers into binary)\

\b trig	
\b0 	retrigger\
\pard\pardeftab560

\f1\fs18 \cf3 \
s.boot;\
r = \cf2 Pca\cf3 .r2;\cf4 //29 preset rules\cf3 \
\
\cf0 \{ \cf6 CA2\cf0 .ar(\cf7 22000\cf0 , \cf6 MouseY\cf0 .kr(\cf7 16\cf0 , \cf7 200\cf0 ), r[\cf7 8\cf0 ], \cf6 MouseX\cf0 .kr(\cf7 0\cf0 , \cf7 255\cf0 ), \cf6 Impulse\cf0 .kr(\cf7 10\cf0 )).clip2 * \cf7 0.1\cf0 .dup \}.play;\cf3 \
\{ \cf2 CA2\cf3 .ar(\cf5 22000\cf3 , \cf2 MouseY\cf3 .kr(\cf5 16\cf3 , \cf5 200\cf3 ), r[\cf5 15\cf3 ], \cf2 MouseX\cf3 .kr(\cf5 0\cf3 , \cf5 255\cf3 ), \cf2 Dust\cf3 .kr(\cf5 100\cf3 )).clip2 * \cf5 0.1\cf3 .dup \}.play;}