{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green77\blue204;\red204\green0\blue102;\red96\green96\blue96;
\red0\green0\blue0;\red96\green96\blue96;}
\deftab560
\pard\pardeftab560

\f0\i\b\fs140 \cf2 CA2x\
\pard\pardeftab560

\i0\fs24 \cf0 *ar(smprt, smpwd, rule, seed, trig, mul, add) 
\b0 \cf3 // yet experimental! loud!\cf0 \
ugen one-dimensional binary states cellular automaton (\cf4 2 \cf0 neighbours configuration). \
interprets the binary lattice as floating-point sample values.\
cubic-interpolation.\
\

\b smprt	
\b0 iteration frequency\

\b smpwd
\b0  	lattice size\

\b rule	
\b0 	\cf4 "00000000-FFFFFFFF"\cf0 \
\pard\pardeftab560

\b \cf5 seed
\b0 	seeding (random if \cf6 0\cf5 , otherwise translate integers into binary)\
\pard\pardeftab560

\b \cf0 trig	
\b0 	retrigger\

\f1\fs18 \
\pard\pardeftab560
\cf0 s.boot;\
r = \cf2 Pca\cf0 .r2;\cf3 //29 preset rules\cf0 \
\
\{ \cf2 CA2\cf0 .ar(\cf4 22000\cf0 , \cf2 MouseY\cf0 .kr(\cf4 16\cf0 , \cf4 200\cf0 ), r[\cf4 8\cf0 ], \cf2 MouseX\cf0 .kr(\cf4 0\cf0 , \cf4 255\cf0 ), \cf2 Impulse\cf0 .kr(\cf4 10\cf0 )).clip2 * \cf4 0.1\cf0 .dup \}.play;\
\{ \cf2 CA2\cf0 .ar(\cf4 22000\cf0 , \cf2 MouseY\cf0 .kr(\cf4 16\cf0 , \cf4 200\cf0 ), r[\cf4 15\cf0 ], \cf2 MouseX\cf0 .kr(\cf4 0\cf0 , \cf4 255\cf0 ), \cf2 Dust\cf0 .kr(\cf4 100\cf0 )).clip2 * \cf4 0.1\cf0 .dup \}.play;}